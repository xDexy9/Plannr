{"ast":null,"code":"// Storage keys\nconst KEYS={TASKS:'plannr_tasks',USER:'user',LAST_STREAK_DATE:'plannr_last_streak_date',STORAGE_VERSION:'plannr_storage_version'};// Current storage version - increment when making breaking changes to storage structure\nconst CURRENT_VERSION='1.0';// Initialize storage version if not set\nconst initializeStorage=()=>{try{const version=localStorage.getItem(KEYS.STORAGE_VERSION);if(!version){localStorage.setItem(KEYS.STORAGE_VERSION,CURRENT_VERSION);}else if(version!==CURRENT_VERSION){// Handle migration if needed in the future\nconsole.log(`Storage version updated from ${version} to ${CURRENT_VERSION}`);localStorage.setItem(KEYS.STORAGE_VERSION,CURRENT_VERSION);}}catch(error){console.error('Failed to initialize storage:',error);}};// Initialize on module load\ninitializeStorage();// Generic get function with error handling\nexport const getItem=(key,defaultValue)=>{try{const item=localStorage.getItem(key);return item?JSON.parse(item):defaultValue;}catch(error){console.error(`Error retrieving ${key} from storage:`,error);return defaultValue;}};// Generic set function with error handling\nexport const setItem=(key,value)=>{try{localStorage.setItem(key,JSON.stringify(value));return true;}catch(error){console.error(`Error saving ${key} to storage:`,error);// Handle quota exceeded error\nif(error instanceof DOMException&&error.name==='QuotaExceededError'){alert('Storage limit reached. Please clear some data or try a different browser.');}return false;}};// Remove item with error handling\nexport const removeItem=key=>{try{localStorage.setItem(key,'');localStorage.removeItem(key);return true;}catch(error){console.error(`Error removing ${key} from storage:`,error);return false;}};// Task-specific functions\nexport const getTasks=()=>{return getItem(KEYS.TASKS,[]);};export const saveTasks=tasks=>{return setItem(KEYS.TASKS,tasks);};// User-specific functions\nexport const getUser=()=>{return getItem(KEYS.USER,null);};export const saveUser=user=>{return setItem(KEYS.USER,user);};export const removeUser=()=>{return removeItem(KEYS.USER);};// Streak-specific functions\nexport const getLastStreakDate=()=>{return getItem(KEYS.LAST_STREAK_DATE,'');};export const saveLastStreakDate=date=>{return setItem(KEYS.LAST_STREAK_DATE,date);};// Storage status check\nexport const isStorageAvailable=()=>{try{const test='__storage_test__';localStorage.setItem(test,test);localStorage.removeItem(test);return true;}catch(e){return false;}};// Get storage usage information\nexport const getStorageInfo=()=>{let used=0;try{for(let i=0;i<localStorage.length;i++){const key=localStorage.key(i);if(key){const value=localStorage.getItem(key)||'';used+=key.length+value.length;}}}catch(e){console.error('Error calculating storage usage:',e);}// Convert to KB (approximate)\nconst usedKB=Math.round(used/1024);// Most browsers have a limit of 5-10MB\nconst totalKB=5*1024;// 5MB in KB\nreturn{used:usedKB,total:totalKB,percentage:Math.min(100,Math.round(usedKB/totalKB*100))};};","map":{"version":3,"names":["KEYS","TASKS","USER","LAST_STREAK_DATE","STORAGE_VERSION","CURRENT_VERSION","initializeStorage","version","localStorage","getItem","setItem","console","log","error","key","defaultValue","item","JSON","parse","value","stringify","DOMException","name","alert","removeItem","getTasks","saveTasks","tasks","getUser","saveUser","user","removeUser","getLastStreakDate","saveLastStreakDate","date","isStorageAvailable","test","e","getStorageInfo","used","i","length","usedKB","Math","round","totalKB","total","percentage","min"],"sources":["C:/Users/User/Desktop/Plannr-new/src/utils/storage.ts"],"sourcesContent":["import { Task } from '../contexts/TaskContext';\r\nimport { User } from '../contexts/AuthContext';\r\n\r\n// Storage keys\r\nconst KEYS = {\r\n  TASKS: 'plannr_tasks',\r\n  USER: 'user',\r\n  LAST_STREAK_DATE: 'plannr_last_streak_date',\r\n  STORAGE_VERSION: 'plannr_storage_version'\r\n};\r\n\r\n// Current storage version - increment when making breaking changes to storage structure\r\nconst CURRENT_VERSION = '1.0';\r\n\r\n// Initialize storage version if not set\r\nconst initializeStorage = (): void => {\r\n  try {\r\n    const version = localStorage.getItem(KEYS.STORAGE_VERSION);\r\n    if (!version) {\r\n      localStorage.setItem(KEYS.STORAGE_VERSION, CURRENT_VERSION);\r\n    } else if (version !== CURRENT_VERSION) {\r\n      // Handle migration if needed in the future\r\n      console.log(`Storage version updated from ${version} to ${CURRENT_VERSION}`);\r\n      localStorage.setItem(KEYS.STORAGE_VERSION, CURRENT_VERSION);\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to initialize storage:', error);\r\n  }\r\n};\r\n\r\n// Initialize on module load\r\ninitializeStorage();\r\n\r\n// Generic get function with error handling\r\nexport const getItem = <T>(key: string, defaultValue: T): T => {\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : defaultValue;\r\n  } catch (error) {\r\n    console.error(`Error retrieving ${key} from storage:`, error);\r\n    return defaultValue;\r\n  }\r\n};\r\n\r\n// Generic set function with error handling\r\nexport const setItem = <T>(key: string, value: T): boolean => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    return true;\r\n  } catch (error) {\r\n    console.error(`Error saving ${key} to storage:`, error);\r\n    \r\n    // Handle quota exceeded error\r\n    if (error instanceof DOMException && error.name === 'QuotaExceededError') {\r\n      alert('Storage limit reached. Please clear some data or try a different browser.');\r\n    }\r\n    \r\n    return false;\r\n  }\r\n};\r\n\r\n// Remove item with error handling\r\nexport const removeItem = (key: string): boolean => {\r\n  try {\r\n    localStorage.setItem(key, '');\r\n    localStorage.removeItem(key);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(`Error removing ${key} from storage:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Task-specific functions\r\nexport const getTasks = (): Task[] => {\r\n  return getItem<Task[]>(KEYS.TASKS, []);\r\n};\r\n\r\nexport const saveTasks = (tasks: Task[]): boolean => {\r\n  return setItem(KEYS.TASKS, tasks);\r\n};\r\n\r\n// User-specific functions\r\nexport const getUser = (): User | null => {\r\n  return getItem<User | null>(KEYS.USER, null);\r\n};\r\n\r\nexport const saveUser = (user: User): boolean => {\r\n  return setItem(KEYS.USER, user);\r\n};\r\n\r\nexport const removeUser = (): boolean => {\r\n  return removeItem(KEYS.USER);\r\n};\r\n\r\n// Streak-specific functions\r\nexport const getLastStreakDate = (): string => {\r\n  return getItem<string>(KEYS.LAST_STREAK_DATE, '');\r\n};\r\n\r\nexport const saveLastStreakDate = (date: string): boolean => {\r\n  return setItem(KEYS.LAST_STREAK_DATE, date);\r\n};\r\n\r\n// Storage status check\r\nexport const isStorageAvailable = (): boolean => {\r\n  try {\r\n    const test = '__storage_test__';\r\n    localStorage.setItem(test, test);\r\n    localStorage.removeItem(test);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Get storage usage information\r\nexport const getStorageInfo = (): { used: number, total: number, percentage: number } => {\r\n  let used = 0;\r\n  \r\n  try {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key) {\r\n        const value = localStorage.getItem(key) || '';\r\n        used += key.length + value.length;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error('Error calculating storage usage:', e);\r\n  }\r\n  \r\n  // Convert to KB (approximate)\r\n  const usedKB = Math.round(used / 1024);\r\n  \r\n  // Most browsers have a limit of 5-10MB\r\n  const totalKB = 5 * 1024; // 5MB in KB\r\n  \r\n  return {\r\n    used: usedKB,\r\n    total: totalKB,\r\n    percentage: Math.min(100, Math.round((usedKB / totalKB) * 100))\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}