{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Plannr\\\\src\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nconst colorMap = {\n  indigo: {\n    light: '#4f46e5',\n    dark: '#6366f1'\n  },\n  emerald: {\n    light: '#10b981',\n    dark: '#34d399'\n  },\n  rose: {\n    light: '#e11d48',\n    dark: '#fb7185'\n  },\n  amber: {\n    light: '#d97706',\n    dark: '#f59e0b'\n  },\n  blue: {\n    light: '#2563eb',\n    dark: '#3b82f6'\n  }\n};\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState(() => {\n    const savedMode = localStorage.getItem('theme-mode');\n    return savedMode || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n  });\n  const [themeColor, setThemeColor] = useState(() => {\n    const savedColor = localStorage.getItem('theme-color');\n    return savedColor || 'indigo';\n  });\n  useEffect(() => {\n    localStorage.setItem('theme-mode', mode);\n    if (mode === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [mode]);\n  useEffect(() => {\n    localStorage.setItem('theme-color', themeColor);\n    applyThemeColor(themeColor);\n  }, [themeColor]);\n  const toggleMode = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  const applyThemeColor = color => {\n    document.documentElement.style.setProperty('--color-primary-light', colorMap[color].light);\n    document.documentElement.style.setProperty('--color-primary-dark', colorMap[color].dark);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      toggleMode,\n      themeColor,\n      setThemeColor,\n      applyThemeColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"6+l+wjy1TYnl7KGeuJvdlBya8CQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","colorMap","indigo","light","dark","emerald","rose","amber","blue","ThemeProvider","children","_s","mode","setMode","savedMode","localStorage","getItem","window","matchMedia","matches","themeColor","setThemeColor","savedColor","setItem","document","documentElement","classList","add","remove","applyThemeColor","toggleMode","prevMode","color","style","setProperty","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Plannr/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ntype ThemeMode = 'light' | 'dark';\r\ntype ThemeColor = 'indigo' | 'emerald' | 'rose' | 'amber' | 'blue';\r\n\r\ninterface ThemeContextType {\r\n  mode: ThemeMode;\r\n  toggleMode: () => void;\r\n  themeColor: ThemeColor;\r\n  setThemeColor: (color: ThemeColor) => void;\r\n  applyThemeColor: (color: ThemeColor) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst colorMap = {\r\n  indigo: {\r\n    light: '#4f46e5',\r\n    dark: '#6366f1',\r\n  },\r\n  emerald: {\r\n    light: '#10b981',\r\n    dark: '#34d399',\r\n  },\r\n  rose: {\r\n    light: '#e11d48',\r\n    dark: '#fb7185',\r\n  },\r\n  amber: {\r\n    light: '#d97706',\r\n    dark: '#f59e0b',\r\n  },\r\n  blue: {\r\n    light: '#2563eb',\r\n    dark: '#3b82f6',\r\n  },\r\n};\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [mode, setMode] = useState<ThemeMode>(() => {\r\n    const savedMode = localStorage.getItem('theme-mode');\r\n    return (savedMode as ThemeMode) || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\r\n  });\r\n  \r\n  const [themeColor, setThemeColor] = useState<ThemeColor>(() => {\r\n    const savedColor = localStorage.getItem('theme-color');\r\n    return (savedColor as ThemeColor) || 'indigo';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme-mode', mode);\r\n    if (mode === 'dark') {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [mode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme-color', themeColor);\r\n    applyThemeColor(themeColor);\r\n  }, [themeColor]);\r\n\r\n  const toggleMode = () => {\r\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const applyThemeColor = (color: ThemeColor) => {\r\n    document.documentElement.style.setProperty('--color-primary-light', colorMap[color].light);\r\n    document.documentElement.style.setProperty('--color-primary-dark', colorMap[color].dark);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleMode, themeColor, setThemeColor, applyThemeColor }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}