{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Plannr\\\\src\\\\contexts\\\\TaskContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext(undefined);\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    updateProfile\n  } = useAuth();\n  const [tasks, setTasks] = useState(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    return storedTasks ? JSON.parse(storedTasks) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = task => {\n    const newTask = {\n      ...task,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString()\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  const updateTask = (id, updatedTask) => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      ...updatedTask\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n  };\n  const completeTask = id => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      completed: true\n    } : task));\n\n    // Update user stats\n    if (user) {\n      const completedTasks = user.tasksCompleted + 1;\n      const achievements = Math.floor(completedTasks / 5);\n\n      // Calculate streak\n      const streak = user.streak + 1;\n      updateProfile({\n        tasksCompleted: completedTasks,\n        achievements,\n        streak\n      });\n    }\n  };\n  const getTodayTasks = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      const taskDate = new Date(task.dueDate);\n      taskDate.setHours(0, 0, 0, 0);\n      return taskDate.getTime() === today.getTime() && !task.completed;\n    });\n  };\n  const getUpcomingTasks = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return tasks.filter(task => {\n      const taskDate = new Date(task.dueDate);\n      taskDate.setHours(0, 0, 0, 0);\n      return taskDate.getTime() > today.getTime() && !task.completed;\n    }).sort((a, b) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime());\n  };\n  const getTasksByCategory = category => {\n    return tasks.filter(task => task.category === category && !task.completed);\n  };\n  const getTasksForNextDays = days => {\n    const result = {};\n    const today = new Date();\n    for (let i = 0; i < days; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() + i);\n      date.setHours(0, 0, 0, 0);\n      const dateStr = date.toISOString().split('T')[0];\n      result[dateStr] = tasks.filter(task => {\n        const taskDate = new Date(task.dueDate);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate.getTime() === date.getTime() && !task.completed;\n      });\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      updateTask,\n      deleteTask,\n      completeTask,\n      getTodayTasks,\n      getUpcomingTasks,\n      getTasksByCategory,\n      getTasksForNextDays\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"M7po8/lHREeNpCMNbPuSzpAI2Yc=\", false, function () {\n  return [useAuth];\n});\n_c = TaskProvider;\nexport const useTask = () => {\n  _s2();\n  const context = useContext(TaskContext);\n  if (context === undefined) {\n    throw new Error('useTask must be used within a TaskProvider');\n  }\n  return context;\n};\n_s2(useTask, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","jsxDEV","_jsxDEV","TaskContext","undefined","TaskProvider","children","_s","user","updateProfile","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","addTask","task","newTask","id","Date","now","toString","createdAt","toISOString","prevTasks","updateTask","updatedTask","map","deleteTask","filter","completeTask","completed","completedTasks","tasksCompleted","achievements","Math","floor","streak","getTodayTasks","today","setHours","taskDate","dueDate","getTime","getUpcomingTasks","sort","a","b","getTasksByCategory","category","getTasksForNextDays","days","result","i","date","setDate","getDate","dateStr","split","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTask","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Plannr/src/contexts/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nexport type TaskCategory = 'Personal' | 'Work' | 'Home' | 'Friends' | 'Family';\r\n\r\nexport interface Task {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  dueDate: string;\r\n  category: TaskCategory;\r\n  completed: boolean;\r\n  createdAt: string;\r\n}\r\n\r\ninterface TaskContextType {\r\n  tasks: Task[];\r\n  addTask: (task: Omit<Task, 'id' | 'createdAt'>) => void;\r\n  updateTask: (id: string, task: Partial<Task>) => void;\r\n  deleteTask: (id: string) => void;\r\n  completeTask: (id: string) => void;\r\n  getTodayTasks: () => Task[];\r\n  getUpcomingTasks: () => Task[];\r\n  getTasksByCategory: (category: TaskCategory) => Task[];\r\n  getTasksForNextDays: (days: number) => Record<string, Task[]>;\r\n}\r\n\r\nconst TaskContext = createContext<TaskContextType | undefined>(undefined);\r\n\r\ninterface TaskProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const TaskProvider: React.FC<TaskProviderProps> = ({ children }) => {\r\n  const { user, updateProfile } = useAuth();\r\n  const [tasks, setTasks] = useState<Task[]>(() => {\r\n    const storedTasks = localStorage.getItem('tasks');\r\n    return storedTasks ? JSON.parse(storedTasks) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (task: Omit<Task, 'id' | 'createdAt'>) => {\r\n    const newTask: Task = {\r\n      ...task,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    setTasks(prevTasks => [...prevTasks, newTask]);\r\n  };\r\n\r\n  const updateTask = (id: string, updatedTask: Partial<Task>) => {\r\n    setTasks(prevTasks => \r\n      prevTasks.map(task => \r\n        task.id === id ? { ...task, ...updatedTask } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (id: string) => {\r\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const completeTask = (id: string) => {\r\n    setTasks(prevTasks => \r\n      prevTasks.map(task => \r\n        task.id === id ? { ...task, completed: true } : task\r\n      )\r\n    );\r\n    \r\n    // Update user stats\r\n    if (user) {\r\n      const completedTasks = user.tasksCompleted + 1;\r\n      const achievements = Math.floor(completedTasks / 5);\r\n      \r\n      // Calculate streak\r\n      const streak = user.streak + 1;\r\n      \r\n      updateProfile({\r\n        tasksCompleted: completedTasks,\r\n        achievements,\r\n        streak,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTodayTasks = () => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return tasks.filter(task => {\r\n      const taskDate = new Date(task.dueDate);\r\n      taskDate.setHours(0, 0, 0, 0);\r\n      return taskDate.getTime() === today.getTime() && !task.completed;\r\n    });\r\n  };\r\n\r\n  const getUpcomingTasks = () => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return tasks.filter(task => {\r\n      const taskDate = new Date(task.dueDate);\r\n      taskDate.setHours(0, 0, 0, 0);\r\n      return taskDate.getTime() > today.getTime() && !task.completed;\r\n    }).sort((a, b) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime());\r\n  };\r\n\r\n  const getTasksByCategory = (category: TaskCategory) => {\r\n    return tasks.filter(task => task.category === category && !task.completed);\r\n  };\r\n\r\n  const getTasksForNextDays = (days: number) => {\r\n    const result: Record<string, Task[]> = {};\r\n    const today = new Date();\r\n    \r\n    for (let i = 0; i < days; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() + i);\r\n      date.setHours(0, 0, 0, 0);\r\n      \r\n      const dateStr = date.toISOString().split('T')[0];\r\n      \r\n      result[dateStr] = tasks.filter(task => {\r\n        const taskDate = new Date(task.dueDate);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate.getTime() === date.getTime() && !task.completed;\r\n      });\r\n    }\r\n    \r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={{\r\n      tasks,\r\n      addTask,\r\n      updateTask,\r\n      deleteTask,\r\n      completeTask,\r\n      getTodayTasks,\r\n      getUpcomingTasks,\r\n      getTasksByCategory,\r\n      getTasksForNextDays,\r\n    }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTask = (): TaskContextType => {\r\n  const context = useContext(TaskContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTask must be used within a TaskProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}